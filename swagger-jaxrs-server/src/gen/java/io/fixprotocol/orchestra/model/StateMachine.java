/*
 * Orchestra API
 * API to edit FIX Orchestra (machine readable rules of engagement) specification version 1.0 RC3
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.fixprotocol.orchestra.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.fixprotocol.orchestra.model.Annotation;
import io.fixprotocol.orchestra.model.State;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

/**
 * StateMachine
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-04-17T14:14:51.195Z")
public class StateMachine   {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("initial")
  private State initial = null;

  @JsonProperty("states")
  private List<State> states = null;

  @JsonProperty("annotation")
  private Annotation annotation = null;

  public StateMachine name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   **/
  @JsonProperty("name")
  @ApiModelProperty(required = true, value = "")
  @NotNull
 @Size(max=64)  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public StateMachine initial(State initial) {
    this.initial = initial;
    return this;
  }

  /**
   * Get initial
   * @return initial
   **/
  @JsonProperty("initial")
  @ApiModelProperty(value = "")
  public State getInitial() {
    return initial;
  }

  public void setInitial(State initial) {
    this.initial = initial;
  }

  public StateMachine states(List<State> states) {
    this.states = states;
    return this;
  }

  public StateMachine addStatesItem(State statesItem) {
    if (this.states == null) {
      this.states = new ArrayList<>();
    }
    this.states.add(statesItem);
    return this;
  }

  /**
   * Get states
   * @return states
   **/
  @JsonProperty("states")
  @ApiModelProperty(value = "")
  public List<State> getStates() {
    return states;
  }

  public void setStates(List<State> states) {
    this.states = states;
  }

  public StateMachine annotation(Annotation annotation) {
    this.annotation = annotation;
    return this;
  }

  /**
   * Get annotation
   * @return annotation
   **/
  @JsonProperty("annotation")
  @ApiModelProperty(value = "")
  public Annotation getAnnotation() {
    return annotation;
  }

  public void setAnnotation(Annotation annotation) {
    this.annotation = annotation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StateMachine stateMachine = (StateMachine) o;
    return Objects.equals(this.name, stateMachine.name) &&
        Objects.equals(this.initial, stateMachine.initial) &&
        Objects.equals(this.states, stateMachine.states) &&
        Objects.equals(this.annotation, stateMachine.annotation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, initial, states, annotation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StateMachine {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    initial: ").append(toIndentedString(initial)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    annotation: ").append(toIndentedString(annotation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

