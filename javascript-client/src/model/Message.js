/**
 * Orchestra API
 * API to edit FIX Orchestra (machine readable rules of engagement) specification version 1.0 RC3
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Annotation from './Annotation';
import ObjectId from './ObjectId';
import Response from './Response';
import Structure from './Structure';





/**
* The Message model module.
* @module model/Message
* @version 1.0.0
*/
export default class Message {
    /**
    * Constructs a new <code>Message</code>.
    * @alias module:model/Message
    * @class
    * @param oid {module:model/ObjectId} 
    */

    constructor(oid) {
        

        
        

        this['oid'] = oid;

        
    }

    /**
    * Constructs a <code>Message</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Message} obj Optional instance to populate.
    * @return {module:model/Message} The populated <code>Message</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Message();

            
            
            

            if (data.hasOwnProperty('oid')) {
                obj['oid'] = ObjectId.constructFromObject(data['oid']);
            }
            if (data.hasOwnProperty('scenario')) {
                obj['scenario'] = ApiClient.convertToType(data['scenario'], 'String');
            }
            if (data.hasOwnProperty('extends')) {
                obj['extends'] = ApiClient.convertToType(data['extends'], 'String');
            }
            if (data.hasOwnProperty('flow')) {
                obj['flow'] = ApiClient.convertToType(data['flow'], 'String');
            }
            if (data.hasOwnProperty('msgType')) {
                obj['msgType'] = ApiClient.convertToType(data['msgType'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('structure')) {
                obj['structure'] = Structure.constructFromObject(data['structure']);
            }
            if (data.hasOwnProperty('responses')) {
                obj['responses'] = ApiClient.convertToType(data['responses'], [Response]);
            }
            if (data.hasOwnProperty('annotation')) {
                obj['annotation'] = Annotation.constructFromObject(data['annotation']);
            }
        }
        return obj;
    }

    /**
    * @member {module:model/ObjectId} oid
    */
    oid = undefined;
    /**
    * Use case of a message type
    * @member {String} scenario
    * @default 'base'
    */
    scenario = 'base';
    /**
    * Inherits properties from another scenario
    * @member {String} extends
    */
    extends = undefined;
    /**
    * A stream of messages between actors
    * @member {String} flow
    */
    flow = undefined;
    /**
    * @member {String} msgType
    */
    msgType = undefined;
    /**
    * @member {String} category
    */
    category = undefined;
    /**
    * @member {module:model/Structure} structure
    */
    structure = undefined;
    /**
    * @member {Array.<module:model/Response>} responses
    */
    responses = undefined;
    /**
    * @member {module:model/Annotation} annotation
    */
    annotation = undefined;








}


