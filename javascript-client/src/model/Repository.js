/**
 * Orchestra API
 * API to edit FIX Orchestra (machine readable rules of engagement) specification version 1.0 RC3
 *
 * OpenAPI spec version: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Metadata from './Metadata';





/**
* The Repository model module.
* @module model/Repository
* @version 1.0.1
*/
export default class Repository {
    /**
    * Constructs a new <code>Repository</code>.
    * @alias module:model/Repository
    * @class
    * @param name {String} Stable name that does not change with minor version updates
    * @param version {String} 
    */

    constructor(name, version) {
        

        
        

        this['name'] = name;this['version'] = version;

        
    }

    /**
    * Constructs a <code>Repository</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Repository} obj Optional instance to populate.
    * @return {module:model/Repository} The populated <code>Repository</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Repository();

            
            
            

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('oid')) {
                obj['oid'] = ApiClient.convertToType(data['oid'], 'String');
            }
            if (data.hasOwnProperty('specURL')) {
                obj['specURL'] = ApiClient.convertToType(data['specURL'], 'String');
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('hasComponents')) {
                obj['hasComponents'] = ApiClient.convertToType(data['hasComponents'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = Metadata.constructFromObject(data['metadata']);
            }
        }
        return obj;
    }

    /**
    * Stable name that does not change with minor version updates
    * @member {String} name
    */
    name = undefined;
    /**
    * @member {String} version
    */
    version = undefined;
    /**
    * Globally unique object identifier, a URI or UUID
    * @member {String} oid
    */
    oid = undefined;
    /**
    * Reference documentation
    * @member {String} specURL
    */
    specURL = undefined;
    /**
    * Associated schema namespace
    * @member {String} namespace
    */
    namespace = undefined;
    /**
    * @member {Boolean} hasComponents
    */
    hasComponents = undefined;
    /**
    * @member {module:model/Metadata} metadata
    */
    metadata = undefined;








}


